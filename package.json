{
  "name": "nest-boilerplate",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "MIT",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --ignore-path .gitignore --write --ignore-unknown .",
    "prestart:issue": "npm run prebuild && npm run format && npm run start:docker && npm run bump:db-migrations",
    "prestart": "npm run prebuild && npm run format && npm run start:docker && npm run update:db-migrations",
    "start": "cross-env NODE_ENV=development nest start",
    "start:dev": "npm run prestart && cross-env NODE_ENV=development nest start --watch",
    "start:debug": "npm run prestart && cross-env NODE_ENV=development nest start --debug --watch",
    "start:prod": "npm run prestart && cross-env NODE_ENV=production node dist/main",
    "lint": "eslint --ignore-path .gitignore \"**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json --detectOpenHandles",
    "test:e2e:watch": "jest --config ./test/jest-e2e.json --watch --detectOpenHandles",
    "start:docker": "npm run kill:docker && docker-compose up -d",
    "kill:docker": "docker-compose rm -fsv",
    "initial:db-migrations": "mikro-orm migration:create --initial",
    "create:db-migrations": "mikro-orm migration:create",
    "up:db-migrations": "mikro-orm migration:up",
    "bump:db-migrations": "mikro-orm migration:create && mikro-orm migration:up"
  },
  "dependencies": {
    "@mikro-orm/cli": "^4.5.9",
    "@mikro-orm/core": "^4.5.9",
    "@mikro-orm/mysql": "^4.5.9",
    "@mikro-orm/nestjs": "^4.3.1",
    "@mikro-orm/sql-highlighter": "^1.0.1",
    "@nestjs/axios": "^0.0.3",
    "@nestjs/common": "^8.0.0",
    "@nestjs/config": "^1.1.5",
    "@nestjs/core": "^8.0.0",
    "@nestjs/graphql": "^9.1.2",
    "@nestjs/jwt": "^8.0.0",
    "@nestjs/passport": "^8.0.1",
    "@nestjs/platform-express": "^8.0.0",
    "@nestjs/swagger": "^5.1.5",
    "@nestjs/throttler": "^2.0.0",
    "apollo-server-core": "^3.5.0",
    "axios": "^0.24.0",
    "bcrypt": "^5.0.1",
    "cache-pug-templates": "^2.0.3",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "cross-env": "^7.0.3",
    "email-templates": "^8.0.8",
    "faker": "^5.5.3",
    "helmet": "^4.6.0",
    "morgan": "^1.10.0",
    "multer": "^1.4.4",
    "nodemailer": "^6.7.2",
    "npm": "^8.3.0",
    "passport-jwt": "^4.0.0",
    "pug": "^3.0.2",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "swagger-ui-express": "^4.3.0",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@nestjs/cli": "^8.0.0",
    "@nestjs/schematics": "^8.0.0",
    "@nestjs/testing": "^8.0.0",
    "@types/bcrypt": "^5.0.0",
    "@types/compression": "^1.7.2",
    "@types/cors": "^2.8.12",
    "@types/email-templates": "^8.0.4",
    "@types/express": "^4.17.13",
    "@types/faker": "^5.5.9",
    "@types/jest": "27.0.2",
    "@types/morgan": "^1.9.3",
    "@types/multer": "^1.4.7",
    "@types/node": "^16.0.0",
    "@types/nodemailer": "^6.4.4",
    "@types/passport-jwt": "^3.0.6",
    "@types/pug": "^2.0.5",
    "@types/supertest": "^2.0.11",
    "@types/uuid": "^8.3.3",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "eslint": "^8.0.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0",
    "jest": "^27.2.5",
    "prettier": "^2.3.2",
    "source-map-support": "^0.5.20",
    "supertest": "^6.1.3",
    "ts-jest": "^27.0.3",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "^3.10.1",
    "typescript": "^4.3.5"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "verbose": true,
    "setupFilesAfterEnv": [
      "./setup-tests.ts"
    ],
    "moduleNameMapper": {
      "@/(.*)": [
        "<rootDir>/$1"
      ]
    }
  },
  "mikro-orm": {
    "useTsNode": true,
    "configPaths": [
      "src/mikro-orm.config.ts",
      "dist/mikro-orm.config.js"
    ]
  }
}
